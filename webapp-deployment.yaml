---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-mysql
  namespace: final
  labels:
    app.kubernetes.io/app: webapp
    app.kubernetes.io/name: webapp-mysql
  annotations:
    flux.weave.works/automated: "true"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/app: webapp
      app.kubernetes.io/name: webapp-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/app: webapp
        app.kubernetes.io/name: webapp-mysql
    spec:
      serviceAccountName: clo-835
      containers:
      - name: aws-cli
        image: amazon/aws-cli:arm64
        command: ["/bin/sh", "-c"]
        args:
        - echo starting; 
          aws s3 cp s3://clo835-project/failed.png /tmp/s3_image;
          aws s3 cp s3://clo835-project/success.jpg /tmp/s3_image;
          sleep 9000;
          echo done;
        volumeMounts:
        - name: s3-image
          mountPath: /tmp/s3_image
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 200m
          requests:
            cpu: 200m

      - name: webapp-mysql
        image: 397002225899.dkr.ecr.us-east-1.amazonaws.com/clo835:webapp-v11
        volumeMounts:
        - name: db-secret-volume
          mountPath: "/opt/app-secret-volumes"
          readOnly: true
        - name: s3-image
          mountPath: /clo835/config/image_url
        envFrom:
        - secretRef:
            name: db-secret
        env:
        - name: IMAGE_URL_PATH
          valueFrom:
            configMapKeyRef:
              name: webapp-config
              key: IMAGE_URL_PATH
        - name: IMAGE_URL_S3
          valueFrom:
            configMapKeyRef:
              name: webapp-config
              key: IMAGE_URL_S3
        - name: GROUP
          valueFrom:
            configMapKeyRef:
              name: webapp-config
              key: GROUP
        ports:
        - containerPort: 81
        #lifecycle:
        #   postStart:
        #     exec:
        #       command: ["/bin/sh", "-c", "cp /clo835/config/image_url/* static/"]
        # resources:
        #   limits:
        #     cpu: 1000m
        #   requests:
        #     cpu: 1000m
      volumes:
      - name: db-secret-volume
        secret:
          secretName: db-secret
      - name: s3-image
        emptyDir: {}
